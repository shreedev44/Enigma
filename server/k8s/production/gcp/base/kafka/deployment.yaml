apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: enigma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
      - name: copy-config-templates
        image: bitnami/kafka:3.7
        command:
          - sh
          - -c
          - |
            echo "Copying Kafka config templates to writable volume..."
            cp -Rv /opt/bitnami/kafka/config/. /mnt/config-writable/
            echo "Finished copying config templates."
        volumeMounts:
          - name: kafka-config-writable
            mountPath: /mnt/config-writable

      - name: volume-permissions
        image: busybox:latest
        command:
          - sh
          - -c
          - |
            set -x
            echo "Starting volume-permissions initContainer."
            
            echo "Contents of /bitnami/kafka/data BEFORE cleanup and chown:"
            ls -al /bitnami/kafka/data || true
            
            if [ -d "/bitnami/kafka/data/lost+found" ]; then
              echo "Found unexpected /bitnami/kafka/data/lost+found directory. Deleting it."
              rm -rf /bitnami/kafka/data/lost+found
            fi
            
            echo "Fixing permissions on /bitnami/kafka/data"
            chown -R 1001:1001 /bitnami/kafka/data
            
            echo "Contents of /bitnami/kafka/data AFTER cleanup and chown:"
            ls -al /bitnami/kafka/data
            
            echo "Finished volume-permissions initContainer."
            echo "Contents of /opt/bitnami/kafka/data in image context (if applicable):"
            ls -al /opt/bitnami/kafka/data || true
        volumeMounts:
          - name: kafka-storage
            mountPath: /bitnami/kafka/data
      containers:
      - name: kafka
        image: bitnami/kafka:3.7
        ports:
        - containerPort: 9092
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(POD_IP):9092"
        - name: KAFKA_CFG_LOG_DIRS
          value: "/bitnami/kafka/data"
        volumeMounts:
        - name: kafka-storage
          mountPath: /bitnami/kafka/data
        - name: kafka-config-writable
          mountPath: /opt/bitnami/kafka/config
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: kafka-storage
        persistentVolumeClaim:
          claimName: kafka-pvc
      - name: kafka-config-writable
        emptyDir: {}